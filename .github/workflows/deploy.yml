name: Build & deploy

on: [push]

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/rekrutteringsbistand-statistikk-api:${{ github.sha }}
  #####################
  ###  DEVELOPERS: Insert your feature branch name below (in addition to master) if you want to deploy it to dev.
  #####################
  SHOULD_DEPLOY_TO_DEV: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/bytt-fra-circleci-til-githubactions' }}

jobs:
  test:
    name: Build with Gradle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '13.x'
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Build jar
        run: ./gradlew build
      - name: Upload jar
        uses: actions/upload-artifact@v1
        if: env.SHOULD_DEPLOY_TO_DEV == true
        with:
          name: jardir
          path: build/libs/rekrutteringsbistand-statistikk-api-all.jar

  deploy-to-dev:
    name: Deploy to dev
    needs: test
    if: env.SHOULD_DEPLOY_TO_DEV == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download jar
        uses: actions/download-artifact@v1
        with:
          name: jardir
      - name: Move jar to match Dockerfile expectation
        run: ls -R && mkdir -p build/libs && mv jardir/rekrutteringsbistand-statistikk-api-all.jar build/libs
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker push ${IMAGE}
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          VAR: version=${{ env.IMAGE }}
          RESOURCE: nais-dev.yaml

  deploy-to-prod:
    name: Deploy to prod
    needs: deploy-to-dev
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          VAR: version=${{ env.IMAGE }}
          RESOURCE: nais-prod.yaml